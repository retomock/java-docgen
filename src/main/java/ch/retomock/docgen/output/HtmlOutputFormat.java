package ch.retomock.docgen.output;

import ch.retomock.docgen.config.DocGenConfig.Module;
import ch.retomock.docgen.domain.ServiceMethod;
import java.io.FileWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

public class HtmlOutputFormat implements OutputFormat {

  private final FileWriter out;

  public HtmlOutputFormat(FileWriter out) throws IOException {
    this.out = out;
    out.write("<html><head><style>"
        + "body {font-family: Arial, Helvetica, sans-serif;}\n"
        + "table {border-collapse: collapse}\n"
        + "tr:nth-child(odd) {background-color: #f2f2f2;}\n"
        + "th {background-color: #03b2be; padding: 8px;}\n"
        + "td {border: 1px solid #ddd; padding: 8px;}\n"
        + "</style></head><body><h1>Service Documentation</h1>\n"
        + "<p>Please note that this documentation was automatically generated from the code. Do not edit it manually.</p>\n"
        + "<p>Last update: " + DateTimeFormatter.RFC_1123_DATE_TIME.format(OffsetDateTime.now()) + "</p>");
  }

  @Override
  public void tableOfContents(Module[] modules) throws IOException {
    if (modules.length > 1) {
      out.write("<h2>Services Index:</h2>\n<ul>\n");
      for (var module : modules) {
        out.write("<li><a href=\"#");
        out.write(module.getName());
        out.write("\">");
        out.write(module.getName());
        out.write("</a></li>");
      }
      out.write("</ul>\n");
    }
  }

  @Override
  public void title(String moduleName) throws IOException {
    out.write("<h2><a name=\"" + moduleName + "\">Service: " + moduleName + "</h2>");
  }

  @Override
  public void startTable() throws IOException {
    out.write("<table>");
  }

  @Override
  public void endTable() throws IOException {
    out.write("</table>");
  }

  @Override
  public void header(String... headers) throws IOException {
    out.write("<tr>");
    for (var header : headers) {
      out.write("<th>");
      out.write(header);
      out.write("</th>");
    }
    out.write("</tr>\n");
  }

  @Override
  public void serviceMethod(ServiceMethod serviceMethod) throws IOException {
    out.write("<tr><td><pre><a name=\"");
    out.write(serviceMethod.getName());
    out.write("\">");
    out.write(serviceMethod.getName());
    out.write("</pre></td>");
    out.write("<td><pre>");
    if (serviceMethod.getRequiredPermission() != null) {
      out.write(serviceMethod.getRequiredPermission());
    }
    out.write("</pre></td>");
    out.write("<td><pre><ul>");
    for (var conditionalPermission : serviceMethod.getConditionalPermissions()) {
      out.write("<li>");
      out.write(conditionalPermission);
      out.write("</li>");
    }
    out.write("</ul></pre></td>");
    out.write("<td><pre><ul>");
    for (var grpcServiceCall : serviceMethod.getGrpcServiceCalls()) {
      out.write("<li><a href=\"#");
      out.write(grpcServiceCall);
      out.write("\">");
      out.write(grpcServiceCall);
      out.write("</a></li>");
    }
    out.write("</ul></pre></td>");
    out.write("<td><pre><ul>");
    for (var dbTable : serviceMethod.getDatabaseTables()) {
      out.write("<li>");
      out.write(dbTable);
      out.write("</li>");
    }
    out.write("</ul></pre></td>");
    out.write("<td>");
    out.write(serviceMethod.getComment());
    out.write("</td></tr>\n");
  }

  @Override
  public void close() throws Exception {
    out.write("<p>Generated by <a href=\"https://github.com/retomock/java-docgen\">java-docgen</a></body></html>");
    out.close();
  }
}
